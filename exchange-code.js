import fs from 'fs';
import path from 'path';
import axios from 'axios';
import { URLSearchParams } from 'url';

// Usage:
//   node exchange-code.js "<AUTHORIZATION_CODE>"
// Requires .pkce.json generated by pkce-helper.js

async function main() {
  const code = process.argv[2] || '';
  if (!code) {
    console.error('Usage: node exchange-code.js "<AUTHORIZATION_CODE>"');
    process.exit(1);
  }

  const filePath = path.join(process.cwd(), '.pkce.json');
  if (!fs.existsSync(filePath)) {
    console.error('Missing .pkce.json. Run: X_CLIENT_ID=... X_REDIRECT_URI=... node pkce-helper.js');
    process.exit(1);
  }
  const store = JSON.parse(fs.readFileSync(filePath, 'utf-8'));

  const clientId = process.env.X_CLIENT_ID || store.clientId;
  const clientSecret = process.env.X_CLIENT_SECRET || '';
  const redirectUri = process.env.X_REDIRECT_URI || store.redirectUri;
  const codeVerifier = store.codeVerifier;

  if (!clientId || !redirectUri || !codeVerifier) {
    console.error('Missing clientId/redirectUri/codeVerifier. Re-run pkce-helper.js');
    process.exit(1);
  }

  const url = 'https://api.twitter.com/2/oauth2/token';
  const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };

  // If clientSecret provided, send Basic; otherwise pure PKCE
  if (clientSecret) {
    headers['Authorization'] = 'Basic ' + Buffer.from(`${clientId}:${clientSecret}`).toString('base64');
  }

  const body = new URLSearchParams({
    grant_type: 'authorization_code',
    code,
    redirect_uri: redirectUri,
    client_id: clientId,
    code_verifier: codeVerifier,
  }).toString();

  try {
    const resp = await axios.post(url, body, { headers });
    console.log(JSON.stringify(resp.data, null, 2));
  } catch (e) {
    console.error(e.response?.data || e.message);
    process.exit(1);
  }
}

main();


